apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'artifactory-publish'
apply plugin: 'signing'

signing {
	required { false }
	sign configurations.archives
}

def archivesBaseName = 'gradle-docker'
description = 'Gradle plugin to build und publish Docker images from the build script.'
def gitpath = "github.com/YouCruit/gradle-docker"

release {
	tagPrefix = group
}

configurations {
	archives
	provided {
		dependencies.all { dep ->
			configurations.default.exclude group: dep.group, module: dep.name
		}
	}
	compile.extendsFrom provided
}

repositories {
	mavenCentral()
}

if (!hasProperty('nexusUsername')) {
	ext.nexusUsername = ''
	ext.nexusPassword = ''
}

task checkReleaseConfig(dependsOn: clean) << {
	def requiredConfigs= ['nexusPassword', 'nexusUsername', 'signing.password', 'signing.keyId', 'signing.secretKeyRingFile']
	def notFoundProperties = requiredConfigs.findAll {
		!project.hasProperty(it) || !project.getProperties()[it]
	}
	if (notFoundProperties) {
		throw new GradleException("""
		Not found properties: ${notFoundProperties}

		The following is needed to upload (put in ~/.gradle/gradle.properties)
		nexusUsername=<login for https://oss.sonatype.org/>
		nexusPassword=<password for https://oss.sonatype.org/>

		signing.password=<password for gpg key>
		signing.keyId=<keyId>
		signing.secretKeyRingFile=<path to secring.gpg>
		""")
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			pom.artifactId = project.name
			configuration = configurations.archives

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: nexusUsername, password: nexusPassword)
			}
			pom.project {
				url 'http://${gitpath}'
				inceptionYear '2013'
				name archivesBaseName
				description project.description

				scm {
					url "scm:git:https://${gitpath}"
					connection "scm:git:ssh://git@${gitpath}.git"
				}

				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						comments new File(rootDir, 'LICENSE').getText()
						url 'https://opensource.org/licenses/MIT'
						distribution 'repo'
					}
				}
				developers {
					developer {
						id 'mattgruter'
						name 'Matthias GrÃ¼ter'
						email 'matthias.gruter@transmode.com'
						roles {
							role 'Developer'
						}
					}
					developer {
						id 'tobias-'
						name 'Tobias Olsson'
						email 'tobias@youcruit.com'
					}
				}
			}
			pom.packaging = 'jar'
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
		}
	}
}

createReleaseTag.dependsOn uploadArchives

checkCommitNeeded.dependsOn checkReleaseConfig
