buildscript {
    // inspired by https://github.com/Netflix/gradle-template
    apply from: file('gradle/buildscript.gradle'), to: buildscript
}

plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'groovy'

repositories {
    jcenter()
}

apply from: file('gradle/idea.gradle')
apply from: file('gradle/publish.gradle')

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}

sourceSets {
    integTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        groovy {
            srcDir 'src/integTest/groovy'
        }
        resources {
            srcDir 'src/integTest/resources'
        }
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.google.guava:guava:17.0'

    compile 'com.google.guava:guava:17.0'
    compile 'com.github.docker-java:docker-java:0.9.0'

    testCompile 'junit:junit-dep:4.11'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

task integTest(type: Test) {
    group = 'verification'
    description = 'Runs the integration tests.'
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath

}

// run integration tests after unit tests if both are scheduled for execution
integTest.mustRunAfter test

check.dependsOn(integTest)

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}
